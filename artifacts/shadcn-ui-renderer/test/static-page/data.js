const { transformComponentArtifactFromXml } = require("./util")
const { readFileSync } = require("fs")
const codeXml =
  '<ComponentArtifact name="CyberLoginPage">\n  <ComponentFile fileName="App.tsx" isEntryFile="true">\n    import { CyberLoginPage } from \'./CyberLoginPage\';\n    \n    export default function App() {\n      return <CyberLoginPage />;\n    }\n  </ComponentFile>\n  <ComponentFile fileName="LoginPage.tsx" isEntryFile="false">\n    import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";\n    import { Input } from "@/components/ui/input";\n    import { Label } from "@/components/ui/label";\n    import { Button } from "@/components/ui/button";\n    import { Checkbox } from "@/components/ui/checkbox";\n    import { useState } from "react";\n    import { motion } from "framer-motion";\n\n    export const LoginPage = () => {\n      const [email, setEmail] = useState("");\n      const [password, setPassword] = useState("");\n      const [rememberMe, setRememberMe] = useState(false);\n\n      const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        // Handle login logic here\n        console.log({ email, password, rememberMe });\n      };\n\n      return (\n        <div className="flex items-center justify-center min-h-screen bg-gradient-to-br from-gray-900 via-rose-900 to-gray-900">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <Card className="w-full max-w-md bg-gray-800/50 backdrop-blur-md border border-gray-700/50 rounded-xl shadow-xl overflow-hidden">\n              <div className="absolute inset-0 bg-gradient-to-r from-rose-500/10 to-pink-500/10 pointer-events-none" />\n              <CardHeader>\n                <CardTitle className="text-3xl font-bold text-center bg-clip-text text-transparent bg-gradient-to-r from-rose-400 to-pink-400">\n                  Welcome Back\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className="space-y-6">\n                  <div className="space-y-3">\n                    <Label htmlFor="email" className="text-gray-300 font-medium flex items-center">\n                      <span className="bg-gradient-to-r from-rose-400 to-pink-400 bg-clip-text text-transparent">\n                        Email Address\n                      </span>\n                    </Label>\n                    <motion.div whileHover={{ scale: 1.01 }}>\n                      <Input\n                        id="email"\n                        type="email"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder="your@email.com"\n                        required\n                        className="bg-gray-800/70 border-gray-700 text-white placeholder-gray-500 focus:ring-2 focus:ring-rose-500/50 focus:border-transparent rounded-lg py-5 px-4 transition-all duration-300"\n                      />\n                    </motion.div>\n                  </div>\n                  <div className="space-y-3">\n                    <Label htmlFor="password" className="text-gray-300 font-medium flex items-center">\n                      <span className="bg-gradient-to-r from-rose-400 to-pink-400 bg-clip-text text-transparent">\n                        Password\n                      </span>\n                    </Label>\n                    <motion.div whileHover={{ scale: 1.01 }}>\n                      <Input\n                        id="password"\n                        type="password"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder="••••••••"\n                        required\n                        className="bg-gray-800/70 border-gray-700 text-white placeholder-gray-500 focus:ring-2 focus:ring-rose-500/50 focus:border-transparent rounded-lg py-5 px-4 transition-all duration-300"\n                      />\n                    </motion.div>\n                  </div>\n                  <div className="flex items-center justify-between">\n                    <div className="flex items-center space-x-2">\n                      <Checkbox\n                        id="remember"\n                        checked={rememberMe}\n                        onCheckedChange={(checked) => setRememberMe(!!checked)}\n                        className="border-gray-600 bg-gray-800/70 data-[state=checked]:bg-gradient-to-r data-[state=checked]:from-rose-500 data-[state=checked]:to-pink-500"\n                      />\n                      <Label htmlFor="remember" className="text-gray-400 hover:text-gray-300 cursor-pointer transition-colors">\n                        Remember me\n                      </Label>\n                    </div>\n                    <a href="#" className="text-sm text-rose-400 hover:text-rose-300 transition-colors">\n                      Forgot password?\n                    </a>\n                  </div>\n                  <motion.div\n                    whileHover={{ scale: 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                  >\n                    <Button \n                      type="submit" \n                      className="w-full py-5 rounded-lg bg-gradient-to-r from-rose-600 to-pink-600 text-white font-medium text-sm uppercase tracking-wider shadow-lg hover:shadow-rose-500/20 transition-all duration-300"\n                    >\n                      Sign In\n                    </Button>\n                  </motion.div>\n                </form>\n                <div className="mt-6 text-center">\n                  <p className="text-gray-500 text-sm">\n                    New here?{\' \'}\n                    <a href="#" className="text-rose-400 hover:text-rose-300 font-medium transition-colors">\n                      Create an account\n                    </a>\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      );\n    };\n  </ComponentFile>\n  <ComponentFile fileName="interface.ts" isEntryFile="false">\n    // No specific interfaces needed for this component\n  </ComponentFile>\n  <ComponentFile fileName="CyberLoginPage.tsx" isEntryFile="false">\n    import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";\n    import { Input } from "@/components/ui/input";\n    import { Label } from "@/components/ui/label";\n    import { Button } from "@/components/ui/button";\n    import { Checkbox } from "@/components/ui/checkbox";\n    import { useState } from "react";\n    import { motion } from "framer-motion";\n\n    export const CyberLoginPage = () => {\n      const [email, setEmail] = useState("");\n      const [password, setPassword] = useState("");\n      const [rememberMe, setRememberMe] = useState(false);\n\n      const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        console.log({ email, password, rememberMe });\n      };\n\n      return (\n        <div className="min-h-screen bg-black flex items-center justify-center p-4">\n          {/* Cyberpunk grid background */}\n          <div className="absolute inset-0 overflow-hidden opacity-20">\n            <div className="absolute inset-0 bg-[linear-gradient(to_right,#80808012_1px,transparent_1px),linear-gradient(to_bottom,#80808012_1px,transparent_1px)] bg-[size:24px_24px]"></div>\n          </div>\n          \n          {/* Glowing scanline effect */}\n          <div className="absolute inset-0 bg-[linear-gradient(rgba(18,16,16,0)50%,rgba(0,0,0,0.25)50%),linear-gradient(90deg,rgba(255,0,0,0.06),rgba(0,255,0,0.02),rgba(0,0,255,0.06))] bg-[size:100%_2px,3px_100%] pointer-events-none"></div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, ease: "easeOut" }}\n          >\n            <Card className="w-full max-w-md bg-black/80 backdrop-blur-sm border-2 border-cyan-400/30 rounded-none shadow-[0_0_20px_#00f7ff33] relative overflow-hidden">\n              {/* Cyberpunk corner decorations */}\n              <div className="absolute top-0 left-0 w-4 h-4 border-t-2 border-l-2 border-cyan-400"></div>\n              <div className="absolute top-0 right-0 w-4 h-4 border-t-2 border-r-2 border-cyan-400"></div>\n              <div className="absolute bottom-0 left-0 w-4 h-4 border-b-2 border-l-2 border-cyan-400"></div>\n              <div className="absolute bottom-0 right-0 w-4 h-4 border-b-2 border-r-2 border-cyan-400"></div>\n              \n              {/* Glowing border effect */}\n              <div className="absolute inset-0 border border-transparent hover:border-cyan-400/50 transition-all duration-500 pointer-events-none"></div>\n              \n              <CardHeader>\n                <CardTitle className="text-3xl font-bold text-center text-transparent bg-clip-text bg-[linear-gradient(90deg,#00f7ff,#ff00f7)] font-mono tracking-wider">\n                  SYSTEM ACCESS\n                </CardTitle>\n              </CardHeader>\n              \n              <CardContent>\n                <form onSubmit={handleSubmit} className="space-y-6">\n                  <div className="space-y-3">\n                    <Label htmlFor="email" className="text-cyan-300 font-mono text-sm tracking-wider flex items-center">\n                      <span className="text-shadow-[0_0_5px_#00f7ff]">USER IDENTIFIER</span>\n                    </Label>\n                    <motion.div whileHover={{ scale: 1.01 }} whileTap={{ scale: 0.98 }}>\n                      <Input\n                        id="email"\n                        type="email"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder="user@neoncity.io"\n                        required\n                        className="bg-black/70 border-2 border-cyan-400/30 text-cyan-200 placeholder-cyan-400/50 focus:border-cyan-400 focus:ring-0 rounded-none font-mono tracking-wider py-4 px-4 transition-all duration-300 shadow-[inset_0_0_10px_#00f7ff20]"\n                      />\n                    </motion.div>\n                  </div>\n                  \n                  <div className="space-y-3">\n                    <Label htmlFor="password" className="text-cyan-300 font-mono text-sm tracking-wider flex items-center">\n                      <span className="text-shadow-[0_0_5px_#00f7ff]">SECURITY KEY</span>\n                    </Label>\n                    <motion.div whileHover={{ scale: 1.01 }} whileTap={{ scale: 0.98 }}>\n                      <Input\n                        id="password"\n                        type="password"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder="••••••••"\n                        required\n                        className="bg-black/70 border-2 border-cyan-400/30 text-cyan-200 placeholder-cyan-400/50 focus:border-cyan-400 focus:ring-0 rounded-none font-mono tracking-wider py-4 px-4 transition-all duration-300 shadow-[inset_0_0_10px_#00f7ff20]"\n                      />\n                    </motion.div>\n                  </div>\n                  \n                  <div className="flex items-center justify-between">\n                    <div className="flex items-center space-x-2">\n                      <Checkbox\n                        id="remember"\n                        checked={rememberMe}\n                        onCheckedChange={(checked) => setRememberMe(!!checked)}\n                        className="border-2 border-cyan-400/50 bg-black/70 data-[state=checked]:bg-cyan-400/80 data-[state=checked]:border-cyan-400 rounded-none"\n                      />\n                      <Label htmlFor="remember" className="text-cyan-300 hover:text-cyan-200 cursor-pointer transition-colors font-mono text-sm tracking-wider">\n                        REMEMBER SESSION\n                      </Label>\n                    </div>\n                    <a href="#" className="text-sm text-cyan-400 hover:text-cyan-300 transition-colors font-mono tracking-wider">\n                      KEY RECOVERY\n                    </a>\n                  </div>\n                  \n                  <motion.div\n                    whileHover={{ scale: 1.02 }}\n                    whileTap={{ scale: 0.95 }}\n                    className="relative"\n                  >\n                    <div className="absolute inset-0 bg-cyan-400/20 blur-md rounded-sm animate-pulse"></div>\n                    <Button \n                      type="submit" \n                      className="w-full py-4 rounded-sm bg-black border-2 border-cyan-400 text-cyan-400 font-mono text-sm uppercase tracking-widest shadow-[0_0_15px_#00f7ff80] hover:bg-cyan-400/10 hover:shadow-[0_0_20px_#00f7ff] transition-all duration-300 relative z-10"\n                    >\n                      ACCESS TERMINAL\n                    </Button>\n                  </motion.div>\n                </form>\n                \n                <div className="mt-6 text-center">\n                  <p className="text-cyan-400/70 text-sm font-mono tracking-wider">\n                    NEW USER?{\' \'}\n                    <a href="#" className="text-cyan-400 hover:text-cyan-300 font-medium transition-colors">\n                      REQUEST CLEARANCE\n                    </a>\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      );\n    };\n  </ComponentFile>\n</ComponentArtifact>'
// console.log(codeXml)
console.log(transformComponentArtifactFromXml(codeXml))
